# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Update dependencies
on:
  pull_request:
  schedule:
    - cron: "43 21 * * *"
  workflow_dispatch:
jobs:
  dependabot:
    name: Merge automatic pull requests
    if: github.actor == 'dependabot[bot]'
    runs-on: ubuntu-latest
    timeout-minutes: 12
    permissions:
      actions: write
      contents: write
      pull-requests: write
    steps:
      - name: Collect update metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - name: Checkout this repo
        if: steps.metadata.outputs.package-ecosystem == 'go_modules'
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: "0"
          ref: ${{ github.head_ref }}
      - name: Configure git credentials
        if: steps.metadata.outputs.package-ecosystem == 'go_modules'
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email '41898282+github-actions[bot]@users.noreply.github.com'
      - name: Install a flaked Nix
        if: steps.metadata.outputs.package-ecosystem == 'go_modules'
        uses: DeterminateSystems/nix-installer-action@v16
      - name: Update hashed dependencies
        if: steps.metadata.outputs.package-ecosystem == 'go_modules'
        run: |
          nix develop -c go mod tidy
          sed -i 's|vendorHash = \"[^"]*\";|vendorHash = \"\";|' flake.nix
          nix run .# --log-format internal-json 2&> vendors.json || true
          VENDORHASH="$(grep -o 'sha256-[^ ]*=' vendors.json | tail -n 1)"
          sed -i 's|vendorHash = \"\";|vendorHash = \"'"$VENDORHASH"'\";|' flake.nix
          git diff
          git add flake.nix go.mod go.sum
          git commit -m "chore(deps): update go dependencies vendor hash to the packages"
          git push -u origin ${{ github.head_ref }}
      - name: Start the tests
        run: |
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository }}/actions/workflows/tests.yml/dispatches \
             -f "ref=${{ github.head_ref }}"
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Take a snapshot
        run: |
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository }}/actions/workflows/release.yml/dispatches \
             -f "ref=${{ github.head_ref }}"
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Wait for tests to succeed
        uses: lewagon/wait-on-check-action@v1.3.4
        with:
          check-name: "Inspect the code health"
          ref: ${{ github.head_ref }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10
      - name: Wait for a testing benchmark
        uses: lewagon/wait-on-check-action@v1.3.4
        with:
          check-name: "Monitor energy usage"
          ref: ${{ github.head_ref }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10
          allowed-conclusions: success
      - name: Wait for packaging to pass
        uses: lewagon/wait-on-check-action@v1.3.4
        with:
          check-name: "Save a snapshot"
          ref: ${{ github.head_ref }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10
          allowed-conclusions: success
      - name: Merge requests from the kind dependabot
        if: steps.metadata.outputs.update-type == 'version-update:semver-patch' || steps.metadata.outputs.update-type == 'version-update:semver-minor'
        run: gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Perform more tests
        run: |
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository }}/actions/workflows/tests.yml/dispatches \
             -f "ref=main"
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Bundle with packages
        run: |
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository }}/actions/workflows/release.yml/dispatches \
             -f "ref=main"
        env:
          GH_TOKEN: ${{ github.token }}
  flake:
    name: Freeze the latest lockfile
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: write
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4.2.2
        with:
          ref: main
      - name: Configure git credentials
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email '41898282+github-actions[bot]@users.noreply.github.com'
      - name: Install a flaked Nix
        uses: DeterminateSystems/nix-installer-action@v16
      - name: Checkout an update
        run: |
          git checkout -b update
      - name: Update to the latest
        run: |
          nix flake update
      - name: Check for changes
        id: diff
        run: |
          if ! git diff --quiet; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          else
            echo "changed=false" >> "$GITHUB_OUTPUT"
          fi
      - name: Save the flake locks
        if: needs.diff.outputs.changed == 'true'
        run: |
          git commit --all --message "chore(deps): automatic version bump to the most recent packages"
          git push -u origin update
      - name: Start the tests
        if: needs.diff.outputs.changed == 'true'
        run: |
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository }}/actions/workflows/tests.yml/dispatches \
             -f "ref=update"
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Wait for tests to succeed
        if: needs.diff.outputs.changed == 'true'
        uses: lewagon/wait-on-check-action@v1.3.4
        with:
          check-name: "Inspect the code health"
          ref: update
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10
      - name: Wait for a testing benchmark
        if: needs.diff.outputs.changed == 'true'
        uses: lewagon/wait-on-check-action@v1.3.4
        with:
          check-regexp: "Monitor energy usage"
          ref: update
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10
          allowed-conclusions: success
      - name: Save changed version
        run: |
          git checkout main
          git merge update
          git push -u origin main
          git push origin --delete update
      - name: Confirm the tests
        if: needs.diff.outputs.changed == 'true'
        run: |
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository }}/actions/workflows/tests.yml/dispatches \
             -f "ref=main"
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Share with updates
        if: needs.diff.outputs.changed == 'true'
        run: |
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository }}/actions/workflows/release.yml/dispatches \
             -f "ref=main"
        env:
          GH_TOKEN: ${{ github.token }}
